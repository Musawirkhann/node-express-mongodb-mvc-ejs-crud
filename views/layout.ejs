<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>map</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/css/ol.css" type="text/css">
    <link rel="stylesheet" href="/css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unpkg.com/leaflet.pm@latest/dist/leaflet.pm.css" />
    <link rel="stylesheet" href="https://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.css" />
	  <link rel="stylesheet" href="https://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.Default.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.css"/>
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.Default.css"/>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.0/dist/leaflet.css"/>
    <script src="https://unpkg.com/leaflet@1.3.0/dist/leaflet.js"></script>
    
  </head>
<body>
  
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary mb-3">
        <a class="navbar-brand" href="#"></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        
        <div class="collapse navbar-collapse" id="navbarColor01">
          <ul class="navbar-nav mr-auto">
            <li class="nav-item active">
              <a class="nav-link" href="#">Map
                <span class="sr-only">(current)</span>
              </a>
            </li>      
            <li class="nav-item active">
          
              <a class="nav-link" class="btn btn-success float-right" onclick="startDrawing()" href="#"> <i class="fa fa-plus mr-1"></i> Add New 
                <span class="sr-only">(current)</span>
                <select id="typepoint">
                  <option value="Post" style="background-color:rgb(247, 247, 158)">Post</option>
                  <option value="Market" style="background-color:rgb(245, 169, 150)">Market</option>
                  <option value="Ecole" style="background-color:rgb(170, 204, 243)">Ecole</option>
                  <option value="Pharmacie" style="background-color:rgb(158, 247, 166)">Pharmacie</option>
                </select>
              </a>
            </li>        
          </ul>          
        </div>
      </nav>

  
      <div class="container"><%- body %></div>
      <div id="map" style="width: 1500px; height: 600px">
        <div id="popup" class="ol-popup">
      
        </div>
          <a href="#" id="popup-closer" class="ol-popup-closer"></a>
          <div id="popup-content">
          
          </div>
      
      </div>
      
      <script src="https://unpkg.com/leaflet.pm@latest/dist/leaflet.pm.min.js"></script>
            <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
            <script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/build/ol.js"></script>
<div class="modal fade" id="pointadding" tabindex="-1" role="dialog" aria-labelledby="pointaddingLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="pointaddingLabel">New Entry</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form action="/addPost"  method="POST">
        <div class="col-6">
          <div class="form-group">
              <label class="col-form-label" for="numero">numero</label>
              <input type="number" class="form-control" name="numero"  placeholder="numero" id="numero">
          </div>
      </div>
            <div class="col-6">
              <div class="form-group">
                  <label class="col-form-label" for="type">Type</label>
                  <input type="text" class="form-control" name="type" placeholder="type" id="type">
              </div>
            </div>

            <div class="col-6">
              <div class="form-group"> 
                
                  <input type="text"  class="form-control" id="laltitude" name="laltitude" value=""> 
              </div>
            </div>
  
            <div class="col-6">
              <div class="form-group"> 
                
                  <input type="text"  class="form-control" id="longitude" name="longitude"  class="value"> 
              </div>
            </div>

            
           
         
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button itype="submt" class="btn btn-success">Submit</button>      </div>
      </form>
    </div>
  </div>
</div>
<script type="text/javascript" language="Javascript">
// create map and add layers
const map = new ol.Map({
      target: 'map',
      layers: [
        new ol.layer.Tile({
          source: new ol.source.OSM()
        }),
        
      ],
      view: new ol.View({
      center:([1197816.006371,4138617.095339]),
        zoom: 12
      })
    });

$(window).on("load",function(){
    
    jQuery.get("/getAllPosts",function(data){ 
      const features = []; 
      console.log(data);
      var colorpoint;
      for (i = 0; i < data.length; i++){
      
      console.log("hello",data[i]);
      if (data[i].type == 'Post'){
          features.push(new ol.Feature({
        geometry: new ol.geom.Point([data[i].longitude, data[i].laltitude ])
      }));
      }
      
      console.log(features);
      colorpoint=data[i].type;
      }
      const vectorSource = new ol.source.Vector({
      features
    });
   if (colorpoint=="post"){
       console.log("je suis post ")}
       else{
           console.log("je suis autre")
       }
    const vectorLayer = new ol.layer.Vector({
      source: vectorSource,
      style: new ol.style.Style({
        image: new ol.style.Circle({
          radius: 15,
          fill: new ol.style.Fill({color: 'yellow'})
        })
      })
    });
    map.addLayer(vectorLayer);
  
 
    
      
          })
     
            
    })
   
          
       
    

    
     var typeSelect = document.getElementById('typepoint');
      var type = document.getElementById('type');

     /* var view =  new ol.View({
      center:([1197816.006371,4138617.095339]),
      zoom:12
      })
    
  
   // Basemap layer
   var basemapLayer = new ol.layer.Tile({
      source: new ol.source.Stamen({
          layer:'terrain'
      })
    })
    
    var layerArray = [basemapLayer]


    //  1. To define a source
  var drawSource = new ol.source.Vector({
  })
  

  
 // Initiating Map
 var map = new ol.Map({
  target : 'map',
  view :view,
  layers:layerArray
})
*/

var draw = new ol.interaction.Draw({
      type : 'Point',
      source:drawSource,
      style: function(){
        if (typeSelect.value == 'Post'){
            return new ol.style.Style({
                    image :new ol.style.Circle({
                        fill: new ol.style.Fill({
                            color:'yellow'
                        }),
                        radius:7
                    })
                })
        } else if (typeSelect.value == 'Market'  ){
          
            return new ol.style.Style({
                image :new ol.style.Circle({
                    fill: new ol.style.Fill({
                        color:'red'
                    }),
                    
                    radius:7
                })
            })
           }  else if (typeSelect.value == 'Ecole'  ){
            return new ol.style.Style({
                image :new ol.style.Circle({
                    fill: new ol.style.Fill({
                        color:'blue'
                    }),
                    radius:7
                })
            })
          
        } else {
            return new ol.style.Style({
                image :new ol.style.Circle({
                    fill: new ol.style.Fill({
                        color:'green'
                    }),
                    radius:7
                })
            }) 
        }
    }
      
    })
  /*var drawLayer = new ol.layer.Vector({
      source:drawSource,
      style: function(typeSelect){
        if (typeSelect.value == 'Post'){
            return new ol.style.Style({
                    image :new ol.style.Circle({
                        fill: new ol.style.Fill({
                            color:'yellow'
                        }),
                        radius:7
                    })
                })
        } else if (typeSelect.value == 'Market'  ){
            return new ol.style.Style({
                image :new ol.style.Circle({
                    fill: new ol.style.Fill({
                        color:'red'
                    }),
                    
                    radius:7
                })
            })
           } else if (typeSelect.value == 'Ecole'  ){
            return new ol.style.Style({
                image :new ol.style.Circle({
                    fill: new ol.style.Fill({
                        color:'blue'
                    }),
                    radius:7
                })
            })
          
        } else {
            return new ol.style.Style({
                image :new ol.style.Circle({
                    fill: new ol.style.Fill({
                        color:'green'
                    }),
                    radius:7
                })
            }) 
        }
      }
 
  }) 
    
  // 4. Adding on map
 map.addLayer(drawLayer);*/
  // 2. To Define a style
  // Skip it and let the OL use default styling
  // 3. To Define a Layer

  if (typeSelect.value == 'Post'){
    var drawLayerPost = new ol.layer.Vector({
      source:drawSource,
      style: function(){

            return new ol.style.Style({
                    image :new ol.style.Circle({
                        fill: new ol.style.Fill({
                            color:'yellow'
                        }),
                        radius:7
                    })
                })
        
  } });

  map.addLayer(drawLayerPost);
  } 
   if (typeSelect.value == 'Market'){
    var drawLayerMarket = new ol.layer.Heatmap({
      source:drawSource,
      style: function(){
        
            return new ol.style.Style({
                    image :new ol.style.Circle({
                        fill: new ol.style.Fill({
                            color:'red'
                        }),
                        radius:7
                    })
                })
        

  } });
 
  map.addLayer(drawLayerMarket);

  }
  
  if (typeSelect.value == 'Ecole'){
    var drawLayerEcole = new ol.layer.Vector({
      source:drawSource,
      style: function(){
        
            return new ol.style.Style({
                    image :new ol.style.Circle({
                        fill: new ol.style.Fill({
                            color:'blue'
                        }),
                        radius:7
                    })
                })
        

  } });
 
  map.addLayer(drawLayerEcole);

  }

  
 


    
    
   
    /*var popup = new ol.Overlay({
    element: document.getElementById('popup'),
    });
    map.addOverlay(popup);




/**
 * Handle change event.
 */
 typeSelect.onchange = function () {
  map.removeInteraction(draw);
  addInteraction();
};

  /*draw.on('drawstart', function(evt){
      drawSource.clear()
  })*/
   longitude = document.getElementById('longitude');
   latElem = document.getElementById('laltitude');
  longitude.value = '1197816.006371'; 
  latElem.value = '4138617.095339';
  //console.log(longitude);
  //console.log(latElem);
  
  draw.on('drawend',function(evt){
     
      // alert('point is added')
      
      clickedCoord = evt.feature.getGeometry().getFlatCoordinates() 
      //$('#pointadding').modal('show');
      console.log('clicked at', evt.feature.getGeometry().getFlatCoordinates()    )
      /*map.removeInteraction(draw)*/
       //console.log(draw.type)
         // let lat = clickedCoord[0];
          //let lng = clickedCoord[1];
        console.log(clickedCoord[0]);
        console.log(clickedCoord[1]);
        // Update the values in the panel
       
        longitude.value = clickedCoord[0];
        latElem.value = clickedCoord[1];
        type.value=typeSelect.value;
        //console.log(type.value);
        
        const requestOptions = {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({  numero:5,
                   type:typeSelect.value,
                   laltitude: clickedCoord[1].toString(),
                   longitude:  clickedCoord[0].toString()
                  
                  })
        };
        console.log(requestOptions.body);
      fetch('/addPost', requestOptions)
        .then(response => response.json());

       
        

        

  })
  //console.log(longitude);
  //console.log(latElem);

  // Function that enables draw interaction

  function startDrawing(){
  // add interaction to the map
    
  map.addInteraction(draw)
  }
  
 
  </script>        
             
<script
src="https://code.jquery.com/jquery-3.5.0.js"
integrity="sha256-r/AaFHrszJtwpe+tHyNi/XCfMxYpbsRg2Uqn0x3s2zc="
crossorigin="anonymous"></script>
     
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx" crossorigin="anonymous"></script>
 
<!-- Openlayers -->
<link rel="stylesheet" href="https://openlayers.org/en/latest/css/ol.css" />
<script type="text/javascript" src="https://openlayers.org/en/latest/build/ol.js"></script>
<script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL,Object.assign"></script>

<!-- ol-ext -->
<link rel="stylesheet" href="https://cdn.rawgit.com/Viglino/ol-ext/master/dist/ol-ext.min.css" />
<script type="text/javascript" src="https://cdn.rawgit.com/Viglino/ol-ext/master/dist/ol-ext.min.js"></script>
<!-- Openlayers -->
<link rel="stylesheet" href="https://openlayers.org/en/latest/css/ol.css" />
<script type="text/javascript" src="https://openlayers.org/en/latest/build/ol.js"></script>
<script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL,Object.assign"></script>

<!-- ol-ext -->
<link rel="stylesheet" href="https://cdn.rawgit.com/Viglino/ol-ext/master/dist/ol-ext.min.css" />
<script type="text/javascript" src="https://cdn.rawgit.com/Viglino/ol-ext/master/dist/ol-ext.min.js"></script>
    </body>
</html>